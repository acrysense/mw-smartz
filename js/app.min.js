"use strict";

document.addEventListener('DOMContentLoaded', function () {
  // function's
  function bodyFixScroll(status) {
    var scrollPosition = 0;
    var paddingOffset = window.innerWidth - document.body.offsetWidth + 'px';
    var elementsFixed = document.querySelectorAll('.fixed');
    if (status) {
      document.body.classList.add('scroll-disabled');
      scrollPosition = window.pageYOffset;
      document.body.style.overflow = 'hidden';
      document.body.style.position = 'fixed';
      if (document.body.style.top) {
        document.body.style.top = document.body.style.top;
      } else {
        document.body.style.top = '-' + scrollPosition + 'px';
      }
      document.body.style.width = '100%';
      document.body.style.paddingRight = paddingOffset;
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.marginRight = paddingOffset;
        });
      }
    } else {
      document.body.classList.remove('scroll-disabled');
      scrollPosition = Math.abs(parseInt(document.querySelector('body').style.top.replace('px', '')));
      document.body.style.removeProperty('overflow');
      document.body.style.removeProperty('position');
      document.body.style.removeProperty('top');
      document.body.style.removeProperty('width');
      document.body.style.removeProperty('padding-right');
      if (elementsFixed) {
        elementsFixed.forEach(function (item) {
          item.style.removeProperty('margin-right');
        });
      }
      window.scrollTo({
        top: !isNaN(scrollPosition) ? scrollPosition : 0,
        behavior: 'instant'
      });
    }
  }

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // aos
  AOS.init({
    once: true
  });

  // slides up/down/toggle
  var slideUpQna = function slideUpQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.transitionProperty = 'height, margin, padding';
    target.style.transitionDuration = duration + 'ms';
    target.style.height = target.offsetHeight + 'px';
    target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.display = 'none';
      target.style.removeProperty('height');
      target.style.removeProperty('padding-top');
      target.style.removeProperty('padding-bottom');
      target.style.removeProperty('margin-top');
      target.style.removeProperty('margin-bottom');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.remove('is--open');
  };
  var slideDownQna = function slideDownQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    target.style.removeProperty('display');
    var display = window.getComputedStyle(target).display;
    if (display === 'none') display = 'block';
    target.style.display = display;
    var height = target.offsetHeight;
    target.style.overflow = 'hidden';
    target.style.height = 0;
    target.style.paddingTop = 0;
    target.style.paddingBottom = 0;
    target.style.marginTop = 0;
    target.style.marginBottom = 0;
    target.offsetHeight;
    target.style.transitionProperty = "height, margin, padding";
    target.style.transitionDuration = duration + 'ms';
    target.style.height = height + 'px';
    target.style.removeProperty('padding-top');
    target.style.removeProperty('padding-bottom');
    target.style.removeProperty('margin-top');
    target.style.removeProperty('margin-bottom');
    if (target.previousElementSibling) {
      target.previousElementSibling.style.pointerEvents = 'none';
    }
    window.setTimeout(function () {
      target.style.removeProperty('height');
      target.style.removeProperty('overflow');
      target.style.removeProperty('transition-duration');
      target.style.removeProperty('transition-property');
      if (target.previousElementSibling) {
        target.previousElementSibling.style.pointerEvents = 'auto';
      }
    }, duration);
    target.parentNode.classList.add('is--open');
  };
  var slideToggleQna = function slideToggleQna(target) {
    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 400;
    if (window.getComputedStyle(target).display === 'none') {
      return slideDownQna(target, duration);
    } else {
      return slideUpQna(target, duration);
    }
  };

  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // textarea
  var allTexareas = document.querySelectorAll('textarea');
  if (allTexareas) {
    allTexareas.forEach(function (el) {
      el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
      el.classList.add('auto');
      el.addEventListener('input', function (e) {
        el.style.height = 'auto';
        el.style.height = el.scrollHeight + 'px';
      });
    });
  }

  // accordeon
  var accordeonTrigger = document.querySelectorAll('.c-accordeon__trigger');
  var infoAccordeonTrigger = document.querySelectorAll('.c-info-accordeon__trigger');
  if (accordeonTrigger) {
    accordeonTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }
  if (infoAccordeonTrigger) {
    infoAccordeonTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (!item.parentNode.classList.contains('is--open')) {
          slideDownQna(item.nextElementSibling);
        } else {
          slideUpQna(item.nextElementSibling);
        }
      });
    });
  }

  // article copy
  var articleCopyBtn = document.querySelectorAll('.c-article__copy');
  if (articleCopyBtn) {
    articleCopyBtn.forEach(function (button) {
      button.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = button.closest('.c-article');
        var value = button.dataset.value;
        if (value) {
          navigator.clipboard.writeText(value).then(function () {
            parent.classList.add('is--copied');
            setTimeout(function () {
              parent.classList.remove('is--copied');
            }, 2000);
          })["catch"](function (err) {
            return console.error('Ошибка копирования: ', err);
          });
        }
      });
    });
  }

  // catalog
  var catalogTrigger = document.querySelectorAll('.c-catalog__trigger');
  if (catalogTrigger) {
    catalogTrigger.forEach(function (item) {
      var close = function close() {
        var parent = item.closest('.c-catalog');
        parent.classList.remove('is--active');
      };
      var itemChecker = useItemChecker([item.parentNode], close);
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.c-catalog');
        if (parent.classList.contains('is--active')) {
          close();
        } else {
          parent.classList.add('is--active');
          itemChecker.setBodyChecker();
        }
      });
    });
  }

  // user
  var userTrigger = document.querySelectorAll('.c-user__trigger');
  if (userTrigger) {
    userTrigger.forEach(function (item) {
      var close = function close() {
        var parent = item.closest('.c-user');
        parent.classList.remove('is--active');
      };
      var itemChecker = useItemChecker([item.parentNode], close);
      item.addEventListener('click', function (event) {
        if (!item.classList.contains('c-user__trigger--mobile-icon')) {
          event.preventDefault();
          var parent = item.closest('.c-user');
          if (parent.classList.contains('is--active')) {
            close();
          } else {
            parent.classList.add('is--active');
            itemChecker.setBodyChecker();
          }
        }
      });
    });
  }

  // quantity
  var productQuantityBtnMinus = document.querySelectorAll('.c-quantity__btn--minus');
  var productQuantityBtnPlus = document.querySelectorAll('.c-quantity__btn--plus');
  if (productQuantityBtnMinus && productQuantityBtnPlus) {
    productQuantityBtnMinus.forEach(function (item) {
      item.addEventListener('click', function () {
        event.preventDefault();
        var parent = item.closest('.c-quantity');
        var input = parent.querySelector('.c-quantity__value');
        var currentValue = parseInt(input.value) || 0;
        if (currentValue > 0) {
          currentValue--;
          input.value = currentValue;
        }
      });
    });
    productQuantityBtnPlus.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.c-quantity');
        var input = parent.querySelector('.c-quantity__value');
        var currentValue = parseInt(input.value) || 0;
        currentValue++;
        input.value = currentValue;
      });
    });
  }

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  var mobileMenuClose = document.querySelector('.menu__close');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenuTrigger.classList.remove('is--active');
        mobileMenu.classList.remove('is--active');
        bodyFixScroll();
      } else {
        mobileMenuTrigger.classList.add('is--active');
        mobileMenu.classList.add('is--active');
        bodyFixScroll(1);
      }
    });
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', function (event) {
        event.preventDefault();
        if (mobileMenu.classList.contains('is--active')) {
          mobileMenuTrigger.classList.remove('is--active');
          mobileMenu.classList.remove('is--active');
          bodyFixScroll();
        }
      });
    }
  }

  // like
  var likeTrigger = document.querySelectorAll('.c-like');
  if (likeTrigger) {
    likeTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        if (item.classList.contains('is--active')) {
          item.classList.remove('is--active');
        } else {
          item.classList.add('is--active');
        }
      });
    });
  }

  // catalog filter
  var catalogFilterTrigger = document.querySelector('.catalog__filter-trigger');
  var catalogFilter = document.querySelector('.catalog__filter');
  var catalogFilterClose = document.querySelector('.catalog-filter__close');
  if (catalogFilterTrigger && catalogFilter && catalogFilterClose) {
    catalogFilter.addEventListener('click', function (event) {
      if (event.target.classList.contains('catalog__filter')) {
        if (window.innerWidth <= 1199) {
          event.preventDefault();
          if (catalogFilter.classList.contains('is--active')) {
            catalogFilter.classList.remove('is--active');
          }
        }
      }
    });
    catalogFilterTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (catalogFilter.classList.contains('is--active')) {
        catalogFilter.classList.remove('is--active');
      } else {
        catalogFilter.classList.add('is--active');
      }
    });
    catalogFilterClose.addEventListener('click', function (event) {
      event.preventDefault();
      if (catalogFilter.classList.contains('is--active')) {
        catalogFilter.classList.remove('is--active');
      }
    });
  }

  // catalog view
  var catalogViewTrigger = document.querySelectorAll('.c-view__btn');
  var catalogWrapper = document.querySelector('.catalog__wrapper');
  var favoritesWrapper = document.querySelector('.favorites__wrapper');
  if (catalogViewTrigger) {
    catalogViewTrigger.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.c-view__item');
        var id = item.dataset.id;
        if (catalogWrapper) {
          if (id === 'table') {
            catalogWrapper.classList.remove('catalog__wrapper--lines');
            catalogWrapper.classList.remove('catalog__wrapper--rows');
          } else if (id === 'lines') {
            catalogWrapper.classList.add('catalog__wrapper--lines');
            catalogWrapper.classList.remove('catalog__wrapper--rows');
          } else if (id === 'rows') {
            catalogWrapper.classList.remove('catalog__wrapper--lines');
            catalogWrapper.classList.add('catalog__wrapper--rows');
          }
        }
        if (favoritesWrapper) {
          if (id === 'table') {
            favoritesWrapper.classList.remove('favorites__wrapper--lines');
            favoritesWrapper.classList.remove('favorites__wrapper--rows');
          } else if (id === 'lines') {
            favoritesWrapper.classList.add('favorites__wrapper--lines');
            favoritesWrapper.classList.remove('favorites__wrapper--rows');
          } else if (id === 'rows') {
            favoritesWrapper.classList.remove('favorites__wrapper--lines');
            favoritesWrapper.classList.add('favorites__wrapper--rows');
          }
        }
        document.querySelectorAll('.c-view__item').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        parent.classList.add('is--active');
      });
    });
  }

  // select
  var selectBox = document.querySelectorAll('.select-box');
  if (selectBox) {
    var closeAllSelects = function closeAllSelects() {
      document.querySelectorAll('.select-box__container').forEach(function (container) {
        container.classList.remove('select-box__container--active');
      });
      document.querySelectorAll('.select-box__selected').forEach(function (sel) {
        sel.classList.remove('select-box__selected--active');
      });
    };
    document.addEventListener('click', function (e) {
      if (!e.target.closest('.select-box')) {
        closeAllSelects();
      }
    });
    document.querySelectorAll('.select-box').forEach(function (selectBox) {
      var isSingle = selectBox.classList.contains('select-box--single');
      var container = selectBox.querySelector('.select-box__container');
      var selectedDisplay = selectBox.querySelector('.select-box__selected');
      var placeholder = selectedDisplay.querySelector('.select-box__placeholder');
      var searchInput = selectBox.querySelector('.select-box__search-input');
      var groupContainer = selectBox.querySelector('.select-box__group');
      var scrollContainer = selectBox.querySelector('.select-box__scroll');
      var allOptions = Array.from(scrollContainer.querySelectorAll('.select-box__option'));

      // Для множественных селектов сохраняем исходный порядок каждой опции
      if (!isSingle) {
        allOptions.forEach(function (option, index) {
          option.dataset.originalIndex = index;
        });
      }

      // Открытие/закрытие выпадающего списка при клике по выбранному значению
      selectedDisplay.addEventListener('click', function (e) {
        e.stopPropagation();

        // Если уже открыт — закрываем, иначе открываем
        if (container.classList.contains('select-box__container--active')) {
          closeAllSelects();
        } else {
          closeAllSelects();
          container.classList.add('select-box__container--active');
          selectedDisplay.classList.add('select-box__selected--active');
        }
      });

      // Функция обновления класса активности селекта
      function updateSelectActiveState() {
        var chosen = selectBox.querySelectorAll('.select-box__option input:checked');
        if (chosen.length) {
          if (!selectBox.classList.contains('select-box--single')) {
            selectBox.classList.add('select-box--active');
          }
        } else {
          if (!selectBox.classList.contains('select-box--single')) {
            selectBox.classList.remove('select-box--active');
          }
        }
      }

      // Обработчик клика по опции — теперь вешаем его на всю опцию
      allOptions.forEach(function (option) {
        // При клике на опцию не нужно, чтобы событие распространялось на label отдельно
        option.addEventListener('click', function (e) {
          e.stopPropagation();

          // Найдём input внутри опции
          var input = option.querySelector('input');
          // Переключаем checked для одиночного и множественного выбора
          if (isSingle) {
            // Снимаем выбор со всех опций данного селекта
            allOptions.forEach(function (op) {
              return op.querySelector('input').checked = false;
            });
            input.checked = true;

            // Обновляем placeholder текст
            var labelText = option.querySelector('.select-box__label').textContent;
            placeholder.textContent = labelText;

            // Закрываем выпадающий список
            container.classList.remove('select-box__container--active');
            selectedDisplay.classList.remove('select-box__selected--active');
          } else {
            // Для множественного селекта переключаем состояние
            input.checked = !input.checked;
            if (input.checked) {
              // При выборе перемещаем опцию в группу выбранных
              groupContainer.appendChild(option);
              groupContainer.style.display = 'block';
            } else {
              // При снятии выбора возвращаем опцию в scrollContainer согласно исходному порядку
              var origIndex = Number(option.dataset.originalIndex);
              var inserted = false;
              var siblings = Array.from(scrollContainer.querySelectorAll('.select-box__option'));
              for (var _i = 0, _siblings = siblings; _i < _siblings.length; _i++) {
                var sib = _siblings[_i];
                if (Number(sib.dataset.originalIndex) > origIndex) {
                  scrollContainer.insertBefore(option, sib);
                  inserted = true;
                  break;
                }
              }
              if (!inserted) {
                scrollContainer.appendChild(option);
              }
              if (groupContainer.querySelectorAll('.select-box__option').length === 0) {
                groupContainer.style.display = 'none';
              }
            }
          }
          updateSelectActiveState();
        });
      });

      // Поиск (только для множественных селектов)
      if (!isSingle && searchInput) {
        searchInput.addEventListener('input', function () {
          var term = searchInput.value.trim().toLowerCase();

          // Обновляем видимость всех опций (и в группе, и в основном списке)
          allOptions.forEach(function (option) {
            var labelText = option.querySelector('.select-box__label').textContent.toLowerCase();
            option.style.display = labelText.includes(term) ? '' : 'none';
          });
        });
      }
    });
  }

  // basket form
  var basketFormRadios = document.querySelectorAll('.basket-form__checkbox .circle-checkbox__input[data-target]');
  var basketFormPaymentRadios = document.querySelectorAll('.basket-form__checkbox--payment .circle-checkbox__input');
  var basketFormHolders = document.querySelectorAll('.basket-form__holder');
  if (basketFormRadios && basketFormHolders) {
    var _document$querySelect;
    basketFormRadios.forEach(function (radio) {
      radio.addEventListener('change', function () {
        basketFormPaymentRadios.forEach(function (input) {
          var parent = input.closest('.circle-checkbox');
          parent.classList.add('is--hidden');
          input.checked = false;
        });
        basketFormHolders.forEach(function (holder) {
          return holder.classList.remove('is--active');
        });
        var targetId = this.dataset.target;
        var targetBlock = document.getElementById(targetId);
        if (targetBlock) {
          targetBlock.classList.add('is--active');
          var selectedGroup = targetBlock.dataset.group;
          if (selectedGroup === 'group-1') {
            var firstPayment = document.querySelector('.basket-form__checkbox--payment .circle-checkbox__input[data-group*="group-1"]');
            if (firstPayment) {
              var parent = firstPayment.closest('.circle-checkbox');
              parent.classList.remove('is--hidden');
              firstPayment.checked = true;
            }
          } else if (selectedGroup === 'group-2') {
            basketFormPaymentRadios.forEach(function (input) {
              var parent = input.closest('.circle-checkbox');
              parent.classList.remove('is--hidden');
            });
            if (basketFormPaymentRadios.length > 0) {
              basketFormPaymentRadios[0].checked = true;
            }
          }
        }
      });
    });
    (_document$querySelect = document.querySelector('.basket-form__checkbox .circle-checkbox__input:checked[data-target]')) === null || _document$querySelect === void 0 || _document$querySelect.dispatchEvent(new Event("change"));
  }

  // product gallery
  Fancybox.bind("[data-fancybox]", {
    Toolbar: {
      display: {
        left: [],
        middle: [],
        right: ['close']
      }
    },
    Carousel: {
      Navigation: {
        prevTpl: '<svg class="f-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M15.975 22L17.75 20.225L9.525 12L17.75 3.775L15.975 2L5.975 12L15.975 22Z" fill="currentColor"/></svg>',
        nextTpl: '<svg class="f-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"><path d="M8.025 22L6.25 20.225L14.475 12L6.25 3.775L8.025 2L18.025 12L8.025 22Z" fill="currentColor"/></svg>'
      }
    }
  });

  // modal
  var modal = document.querySelectorAll('.modal');
  var modalBtn = document.querySelectorAll('.modal-btn');
  var modalClose = document.querySelectorAll('.modal__close');
  if (modal && modalBtn && modalClose) {
    // modal
    modal.forEach(function (item) {
      item.addEventListener('click', function (event) {
        if (event.target.classList.contains('modal') || event.target.classList.contains('modal__wrap')) {
          event.preventDefault();
          document.querySelectorAll('.modal.is--active').forEach(function (child) {
            return child.classList.remove('is--active');
          });
          document.body.classList.remove('scroll-disabled');
        }
      });
    });

    // modal btn
    modalBtn.forEach(function (item, i) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var modalID = item.dataset.id;
        document.querySelectorAll('.modal.is--active').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        document.getElementById(modalID).classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      });
    });

    // modal close
    modalClose.forEach(function (item) {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        var parent = item.closest('.modal');
        var modalID = parent.id;
        document.querySelectorAll('.modal.is--active').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        document.body.classList.remove('scroll-disabled');
      });
    });
  }
});